#!/usr/bin/env node
interface GitHubConfig {
    releaseRequirements?: {
        requiredLabels?: string[];
        blockingLabels?: string[];
        requiredStatusChecks?: string[];
    };
    autoLabel?: {
        enabled?: boolean;
        mappings?: Record<string, string[]>;
    };
    changelog?: {
        groupByLabels?: boolean;
        labelGroups?: Record<string, string[]>;
        priorityLabels?: string[];
    };
}
interface PRInfo {
    number: number;
    title: string;
    labels: string[];
    status: 'open' | 'closed' | 'merged';
    commits: string[];
}
interface ReleaseReadinessResult {
    isReady: boolean;
    issues: string[];
    warnings: string[];
    prs: PRInfo[];
}
export declare const checkReleaseReadiness: () => ReleaseReadinessResult;
export declare const autoLabelPR: (prNumber: number) => Promise<void>;
export declare const generateEnhancedChangelog: (commits: any[], config?: GitHubConfig) => string;
export declare const setupGitHubIntegration: () => Promise<void>;
export declare const handleCheckReleaseReadiness: () => void;
export declare const handleAutoLabel: (prNumber?: string) => Promise<void>;
export {};
//# sourceMappingURL=githubIntegration.d.ts.map